plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

ext {
    springCloudAwsVersion = '2.2.6.RELEASE'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // === Annotation Processing ===
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // === Test ===
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.assertj:assertj-core'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'

    // === Web ===
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // === Security ===
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // === Validation ===
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // === API Documentation ===
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

    // === Database ===
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    // === Log ===
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '3.3.3'

    // === AWS S3 ===
    implementation "org.springframework.cloud:spring-cloud-starter-aws:${springCloudAwsVersion}"
}



tasks.named('test') {
    useJUnitPlatform()
}
