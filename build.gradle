plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

ext {
    set('querydslVersion', "5.0.0")  // QueryDSL 버전 명시적으로 설정
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // === Annotation Processing ===
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // === Test ===
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.assertj:assertj-core'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'

    // === Web ===
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // === Security ===
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // === Validation ===
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // === API Documentation ===
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

    // === Database ===
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    // === Log ===
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '3.3.3'

    // === AWS S3 ===
    implementation platform("software.amazon.awssdk:bom:2.30.0") // 최신 BOM 버전 확인 필요
    implementation 'software.amazon.awssdk:s3'

    // queryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(generated)
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += "$projectDir/build/generated"
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file('src/main/generated')
}


tasks.named('test') {
    useJUnitPlatform()
}
